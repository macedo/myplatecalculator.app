import type { NextPage } from 'next';
import React, { useEffect, useState } from 'react';
import Head from 'next/head';

import {
  calculatePlates
} from '../src/calculatePlates';

const availablePlates: number[][] =  [[45, 10], [35, 10], [25,10], [15, 10], [10, 10], [5, 10]];

const Barbell45: number = 45;
const Barbell35: number = 35;

type RadioInputProps = {
  checked: boolean
  label: string
  value: string | number
  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void
};

const RadioInput = (props: RadioInputProps): JSX.Element => {
  return (
    <div>
      <input type="radio" value={props.value} checked={props.checked} onChange={props.onChange}/>
      <label>{props.label}</label>
    </div>
  );
};

const Home: NextPage = (): JSX.Element => {

  const [barbellWeight, setBarbellWeight] = useState<number>(Barbell45);

  const [platesConfig, setPlatesConfig] = useState<number[][]>([]);

  const [weight, setWeight] = useState<number>();

  useEffect(() => {
    if (weight) {
      let pConfig = calculatePlates(weight - barbellWeight, availablePlates);
      if (!pConfig) pConfig = [];

      setPlatesConfig(pConfig);
    }
  }, [barbellWeight, weight]);
  
  const weightInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {
    const enteredWeight: number = Number(event.target.value);
    setWeight(enteredWeight);
  };

  const barbellWeightInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {
    const checkedBarbelWeight = Number(event.target.value);
    setBarbellWeight(checkedBarbelWeight);
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className="text-3xl font-bold underline text-gray-400">
          Hello world! Weight is {weight}
        </h1>

        <RadioInput label="35LB" value={Barbell35} checked={barbellWeight == Barbell35} onChange={barbellWeightInputHandler} />
        <RadioInput label="45LB" value={Barbell45} checked={barbellWeight == Barbell45} onChange={barbellWeightInputHandler} />

        <input type="number" min={barbellWeight} step={10} onChange={weightInputHandler} />

        <ul>
          {platesConfig.map((plates, i) => {
            return(
              <li key={i}>{`${plates[1]} x ${plates[0]} LB`}</li>
            );
          })}
        </ul>
      </main>
    </div>
  );
};

export default Home;